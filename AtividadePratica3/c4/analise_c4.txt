Script started on 2023-04-08 17:06:32-03:00 [TERM="xterm-256color" TTY="/dev/pts/3" COLUMNS="146" LINES="12"]
]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ gcc -g -o g4[K[Kc4 c4.c
]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ valgrid --tool=memcheck ./c4

Command 'valgrid' not found, did you mean:

  command 'valgrind' from deb valgrind (1:3.15.0-1ubuntu9.1)

Try: sudo apt install <deb name>

]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ valgrind --tool=memcheck .c[K/c4
==1628== Memcheck, a memory error detector
==1628== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1628== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1628== Command: ./c4
==1628== 
==1628== Use of uninitialised value of size 8
==1628==    at 0x10917A: main (c4.c:13)
==1628== 
==1628== Invalid write of size 4
==1628==    at 0x10917A: main (c4.c:13)
==1628==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1628== 
==1628== 
==1628== Process terminating with default action of signal 11 (SIGSEGV)
==1628==  Access not within mapped region at address 0x0
==1628==    at 0x10917A: main (c4.c:13)
==1628==  If you believe this happened as a result of a stack
==1628==  overflow in your program's main thread (unlikely but
==1628==  possible), you can try to increase the size of the
==1628==  main thread stack using the --main-stacksize= flag.
==1628==  The main thread stack size used in this run was 8388608.
==1628== 
==1628== HEAP SUMMARY:
==1628==     in use at exit: 0 bytes in 0 blocks
==1628==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==1628== 
==1628== All heap blocks were freed -- no leaks are possible
==1628== 
==1628== Use --track-origins=yes to see where uninitialised values come from
==1628== For lists of detected and suppressed errors, rerun with: -s
==1628== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Segmentation fault
]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ [K]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ valgrind --track-origins=yes ./c4
==1635== Memcheck, a memory error detector
==1635== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1635== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1635== Command: ./c4
==1635== 
==1635== Use of uninitialised value of size 8
==1635==    at 0x10917A: main (c4.c:13)
==1635==  Uninitialised value was created by a stack allocation
==1635==    at 0x109169: main (c4.c:8)
==1635== 
==1635== Invalid write of size 4
==1635==    at 0x10917A: main (c4.c:13)
==1635==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1635== 
==1635== 
==1635== Process terminating with default action of signal 11 (SIGSEGV)
==1635==  Access not within mapped region at address 0x0
==1635==    at 0x10917A: main (c4.c:13)
==1635==  If you believe this happened as a result of a stack
==1635==  overflow in your program's main thread (unlikely but
==1635==  possible), you can try to increase the size of the
==1635==  main thread stack using the --main-stacksize= flag.
==1635==  The main thread stack size used in this run was 8388608.
==1635== 
==1635== HEAP SUMMARY:
==1635==     in use at exit: 0 bytes in 0 blocks
==1635==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==1635== 
==1635== All heap blocks were freed -- no leaks are possible
==1635== 
==1635== For lists of detected and suppressed errors, rerun with: -s
==1635== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Segmentation fault
]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ gcc -g -o c4 c4.c
]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ valgrind --tool=memcheck ./c4
==1650== Memcheck, a memory error detector
==1650== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1650== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1650== Command: ./c4
==1650== 
==1650== Use of uninitialised value of size 8
==1650==    at 0x10917A: main (c4.c:13)
==1650== 
==1650== Invalid write of size 4
==1650==    at 0x10917A: main (c4.c:13)
==1650==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1650== 
==1650== 
==1650== Process terminating with default action of signal 11 (SIGSEGV)
==1650==  Access not within mapped region at address 0x0
==1650==    at 0x10917A: main (c4.c:13)
==1650==  If you believe this happened as a result of a stack
==1650==  overflow in your program's main thread (unlikely but
==1650==  possible), you can try to increase the size of the
==1650==  main thread stack using the --main-stacksize= flag.
==1650==  The main thread stack size used in this run was 8388608.
==1650== 
==1650== HEAP SUMMARY:
==1650==     in use at exit: 0 bytes in 0 blocks
==1650==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==1650== 
==1650== All heap blocks were freed -- no leaks are possible
==1650== 
==1650== Use --track-origins=yes to see where uninitialised values come from
==1650== For lists of detected and suppressed errors, rerun with: -s
==1650== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Segmentation fault
]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ clear
[H[2J[3J]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ clearvalgrind --tool=memcheck ./c4[12Pgcc -g -o c4 c4.c
]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ gcc -g -o c4 c4.cclear[Kvalgrind --tool=memcheck ./c4
==1660== Memcheck, a memory error detector
==1660== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1660== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1660== Command: ./c4
==1660== 
==1660== Conditional jump or move depends on uninitialised value(s)
==1660==    at 0x483C9F5: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1660==    by 0x109209: main (c4.c:18)
==1660== 
==1660== Invalid free() / delete / delete[] / realloc()
==1660==    at 0x483CA3F: free (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1660==    by 0x109209: main (c4.c:18)
==1660==  Address 0x109080 is in the Text segment of /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3/c4
==1660==    at 0x109080: _start (in /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3/c4)
==1660== 
==1660== 
==1660== HEAP SUMMARY:
==1660==     in use at exit: 64 bytes in 4 blocks
==1660==   total heap usage: 6 allocs, 3 frees, 112 bytes allocated
==1660== 
==1660== LEAK SUMMARY:
==1660==    definitely lost: 64 bytes in 4 blocks
==1660==    indirectly lost: 0 bytes in 0 blocks
==1660==      possibly lost: 0 bytes in 0 blocks
==1660==    still reachable: 0 bytes in 0 blocks
==1660==         suppressed: 0 bytes in 0 blocks
==1660== Rerun with --leak-check=full to see details of leaked memory
==1660== 
==1660== Use --track-origins=yes to see where uninitialised values come from
==1660== For lists of detected and suppressed errors, rerun with: -s
==1660== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ valgrind --tool=memcheck ./c4[12Pgcc -g -o c4 c4.c
]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ gcc -g -o c4 c4.cvalgrind --tool=memcheck ./c4
==1672== Memcheck, a memory error detector
==1672== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1672== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1672== Command: ./c4
==1672== 
==1672== 
==1672== HEAP SUMMARY:
==1672==     in use at exit: 64 bytes in 4 blocks
==1672==   total heap usage: 6 allocs, 2 frees, 112 bytes allocated
==1672== 
==1672== LEAK SUMMARY:
==1672==    definitely lost: 64 bytes in 4 blocks
==1672==    indirectly lost: 0 bytes in 0 blocks
==1672==      possibly lost: 0 bytes in 0 blocks
==1672==    still reachable: 0 bytes in 0 blocks
==1672==         suppressed: 0 bytes in 0 blocks
==1672== Rerun with --leak-check=full to see details of leaked memory
==1672== 
==1672== For lists of detected and suppressed errors, rerun with: -s
==1672== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ valdring --leak-check=full ./c4
valdring: command not found
]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ valdring --leak-check=full ./c4[1P[C[1P[1P[1P[1P[1@g[1@r[1@i[1@n[1@d
==1681== Memcheck, a memory error detector
==1681== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1681== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1681== Command: ./c4
==1681== 
==1681== 
==1681== HEAP SUMMARY:
==1681==     in use at exit: 64 bytes in 4 blocks
==1681==   total heap usage: 6 allocs, 2 frees, 112 bytes allocated
==1681== 
==1681== 64 bytes in 4 blocks are definitely lost in loss record 1 of 1
==1681==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==1681==    by 0x1091EB: main (c4.c:17)
==1681== 
==1681== LEAK SUMMARY:
==1681==    definitely lost: 64 bytes in 4 blocks
==1681==    indirectly lost: 0 bytes in 0 blocks
==1681==      possibly lost: 0 bytes in 0 blocks
==1681==    still reachable: 0 bytes in 0 blocks
==1681==         suppressed: 0 bytes in 0 blocks
==1681== 
==1681== For lists of detected and suppressed errors, rerun with: -s
==1681== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ valgrind --leak-check=full ./c4dring[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Pgrind --tool=memcheck[C[C[C[C[C[12Pgcc -g -o c4 c4.c
]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ gcc -g -o c4 c4.cvalgrind --leak-check=full ./c4dring[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[2Pgrind --tool=memcheck[C[C[C[C[C
==1690== Memcheck, a memory error detector
==1690== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==1690== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==1690== Command: ./c4
==1690== 
==1690== 
==1690== HEAP SUMMARY:
==1690==     in use at exit: 0 bytes in 0 blocks
==1690==   total heap usage: 6 allocs, 6 frees, 112 bytes allocated
==1690== 
==1690== All heap blocks were freed -- no leaks are possible
==1690== 
==1690== For lists of detected and suppressed errors, rerun with: -s
==1690== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
]0;ramiro@Ramiro: /mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[01;32mramiro@Ramiro[00m:[01;34m/mnt/d/UFMG-TrabalhosExercicios/UFMG - Estrutura de Dados/AtividadePratica3[00m$ exit
exit

Script done on 2023-04-08 17:12:59-03:00 [COMMAND_EXIT_CODE="0"]
